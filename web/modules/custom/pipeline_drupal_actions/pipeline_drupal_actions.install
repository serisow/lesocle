<?php
/**
 * Implements hook_update_N().
 *
 * Sets initial RAG indexing status for existing document media entities.
 */
function pipeline_drupal_actions_update_9401(&$sandbox)
{
  $message = NULL;

  // Initialize batch processing if it hasn't been initialized yet
  if (!isset($sandbox['progress'])) {
    $query = \Drupal::entityQuery('media')
      ->accessCheck()
      ->condition('bundle', 'document');

    $total = $query->count()->execute();

    $sandbox['progress'] = 0;
    $sandbox['current_id'] = 0;
    $sandbox['total'] = $total;

    // If no documents exist, return early
    if ($sandbox['total'] == 0) {
      $message = 'No document media items found to update.';
      return $message;
    }
  }

  // Process 20 media items at a time
  $media_ids = \Drupal::entityQuery('media')
    ->accessCheck()
    ->condition('bundle', 'document')
    ->condition('mid', $sandbox['current_id'], '>')
    ->range(0, 20)
    ->sort('mid')
    ->execute();

  if (!empty($media_ids)) {
    $media_storage = \Drupal::entityTypeManager()->getStorage('media');
    $media_items = $media_storage->loadMultiple($media_ids);

    foreach ($media_items as $media) {
      // Set default values for RAG fields
      $media->set('field_rag_indexing_status', 'pending');
      $media->set('field_embedding_id', NULL);
      $media->set('field_last_indexed', NULL);

      // Save the media entity
      $media->save();

      $sandbox['progress']++;
      $sandbox['current_id'] = $media->id();
    }
  }

  // Update finished variable
  if ($sandbox['progress'] != $sandbox['total']) {
    $sandbox['#finished'] = $sandbox['progress'] / $sandbox['total'];
    $message = t('Processed @progress out of @total document media items.', [
      '@progress' => $sandbox['progress'],
      '@total' => $sandbox['total'],
    ]);
  } else {
    $sandbox['#finished'] = 1;
    $message = t('Successfully updated @total document media items with initial RAG indexing status.', [
      '@total' => $sandbox['total'],
    ]);
  }

  return $message;
}

/**
 * Implements hook_update_N().
 *
 * Verifies RAG fields update and logs any inconsistencies.
 */
function pipeline_drupal_actions_update_9402(&$sandbox)
{
  // Query all document media items
  $media_ids = \Drupal::entityQuery('media')
    ->accessCheck()
    ->condition('bundle', 'document')
    ->execute();

  $invalid_items = [];

  if (!empty($media_ids)) {
    $media_storage = \Drupal::entityTypeManager()->getStorage('media');
    $media_items = $media_storage->loadMultiple($media_ids);

    foreach ($media_items as $media) {
      if ($media->get('field_rag_indexing_status')->isEmpty() ||
        $media->get('field_rag_indexing_status')->value !== 'pending') {
        $invalid_items[] = $media->id();

        // Auto-fix invalid items
        $media->set('field_rag_indexing_status', 'pending');
        $media->save();
      }
    }
  }

  if (!empty($invalid_items)) {
    \Drupal::logger('pipeline')->notice('Fixed RAG indexing status for media items: @ids', [
      '@ids' => implode(', ', $invalid_items),
    ]);
    return t('Found and fixed @count media items with invalid RAG indexing status.', [
      '@count' => count($invalid_items),
    ]);
  }

  return t('All document media items have valid RAG indexing status.');
}
